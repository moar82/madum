;<init>();<init>(unknown.ghost.packag.Collection);add(int, unknown.ghost.packag.E);add(unknown.ghost.packag.E);addAll(int, unknown.ghost.packag.Collection);addAll(unknown.ghost.packag.Collection);addFirst(unknown.ghost.packag.E);addLast(unknown.ghost.packag.E);checkElementIndex(int);checkPositionIndex(int);clear();clone();contains(java.lang.Object);descendingIterator();element();get(int);getFirst();getLast();indexOf(java.lang.Object);isElementIndex(int);isPositionIndex(int);lastIndexOf(java.lang.Object);linkBefore(unknown.ghost.packag.E, java.util.LinkedList$Node);linkFirst(unknown.ghost.packag.E);linkLast(unknown.ghost.packag.E);listIterator(int);node(int);offer(unknown.ghost.packag.E);offerFirst(unknown.ghost.packag.E);offerLast(unknown.ghost.packag.E);outOfBoundsMsg(int);peek();peekFirst();peekLast();poll();pollFirst();pollLast();pop();push(unknown.ghost.packag.E);readObject(java.io.ObjectInputStream);remove();remove(int);remove(java.lang.Object);removeFirst();removeFirstOccurrence(java.lang.Object);removeLast();removeLastOccurrence(java.lang.Object);set(int, unknown.ghost.packag.E);size();spliterator();superClone();toArray();toArray(unknown.ghost.packag.T[]);unlink(java.util.LinkedList$Node);unlinkFirst(java.util.LinkedList$Node);unlinkLast(java.util.LinkedList$Node);writeObject(java.io.ObjectOutputStream)
first;;;;;;;;;;;s;t;;;;;g;;g;;;;;;;;o;;;;;o;o;;;;;;;;;;;;;;;;;;;o;o;t;t;t;o
last;;;;;;;;;;;s;t;;;;;;g;;;;o;;;;;o;;;;;;;o;;;;;;;;;;;;;;;;;;;;t;t;t;
size;;c;s;;;s;;;;;s;t;;;;;;;;g;g;o;;;;;o;;;;o;;;;;;;;;;;o;;;;;;;g;;;o;o;o;o;o;o
